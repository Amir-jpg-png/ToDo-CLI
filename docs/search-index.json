[{"content":"Origin of the To Do CLI I was bored and i was thinking or programming.\nFor a while now rather than using IDEs and other GUI code editors, I have been using nvim.\nOther than that I also began to work on bigger projects (might correspond with my nvim usage), and always faced a problem of solving a bug and forgetting what to do next.\nThat is how I came up with the To Do CLI i made it using a python script and made it executable globally.\nFuture Plans I might come back to this project in the future in that case, I will try to implement the following features.\nColor coded tasks version flag man page better naming increased SEO for the website uncheck option That\u0026rsquo;s it for the next version if there is one.\n","date":"2025-08-09","id":0,"permalink":"/blog/todo-cli-origin-future-plans/","summary":"Introduction of ToDo CLI how it was created and future plans","tags":[],"title":"ToDo CLI origin \u0026 future plans"},{"content":"","date":"2023-09-07","id":1,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":2,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"To start using the ToDo CLI you first need to install it.\nPrerequisites Git must be installed. Curl or wget must be installed. You need sudo privileges to install to /usr/bin/local. Installation curl -fsSL https://raw.githubusercontent.com/Amir-jpg-png/ToDo-CLI/refs/heads/main/install.sh | bash\ror\nwget -qO- https://raw.githubusercontent.com/Amir-jpg-png/ToDo-CLI/refs/heads/main/install.sh | bash\rWhat this command does The command downloads the install.sh script from the repository and runs it. The script will:\nClone the ToDo CLI repository. Make the todo script executable. Move it to /usr/local/bin so it can be run from anywhere. Verify Installation After Installation run\ntodo --help\rYou should see the CLI help text.\n","date":"2023-09-07","id":3,"permalink":"/docs/guides/installation-guide/","summary":"\u003cp\u003eTo start using the ToDo CLI you first need to install it.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGit\u003c/strong\u003e must be installed.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCurl\u003c/strong\u003e or \u003cstrong\u003ewget\u003c/strong\u003e must be installed.\u003c/li\u003e\n\u003cli\u003eYou need \u003cstrong\u003esudo\u003c/strong\u003e privileges to install to /usr/bin/local.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame is-terminal not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -fsSL https://raw.githubusercontent.com/Amir-jpg-png/ToDo-CLI/refs/heads/main/install.sh \u003cspan class=\"p\"\u003e|\u003c/span\u003e bash\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003eor\u003c/p\u003e","tags":[],"title":"Installation Guide"},{"content":"","date":"2023-09-07","id":4,"permalink":"/docs/reference/","summary":"","tags":[],"title":"Reference"},{"content":"Overview The ToDo CLI manages project-specific task lists using a .todo.json file in your current working directory.\nGlobal Options Option Description --help Display help text and available commands --version Show current CLI version Commands todo add \u0026lt;task\u0026gt; Add a new task to the current project\u0026rsquo;s .todo.json.\nArguments:\n\u0026lt;task\u0026gt; — The task description (wrap in quotes if it contains spaces). Example:\ntodo add \u0026#34;Write unit tests for authentication\u0026#34;\rtodo ls List all tasks, grouped by completion status.\nExample:\ntodo ls\rtodo check \u0026lt;id\u0026gt; Mark the task with the given ID as completed.\nArguments:\n\u0026lt;id\u0026gt; — Task ID as shown in todo ls. Example:\ntodo check 3\rtodo rm \u0026lt;id\u0026gt; Remove the task with the given ID permanently.\nArguments:\n\u0026lt;id\u0026gt; — Task ID as shown in todo ls. Example:\ntodo rm 2\r","date":"2025-08-09","id":5,"permalink":"/docs/reference/command-reference/","summary":"A terse, complete guide to every command and flag in the ToDo CLI.","tags":[],"title":"Command Reference"},{"content":" Command / Option Description todo --help Show all available commands and their expected arguments todo add \u0026quot;task\u0026quot; Add a new task to the current project\u0026rsquo;s .todo.json file todo ls List all completed and uncompleted tasks todo check [id] Mark a task as completed todo rm [id] Remove a task permanently There are five commands and one flag to the todo command.\ntodo --help\rVia this flag you can view all the different commands and their expected arguments.\nThis makes this CLI even more intuitive and that way you do not have to keep visiting the documentation.\ntodo add \u0026#34;if the task is longer than one word put it in double quotes\u0026#34;\rThis command adds a task to the .todo.json file which is a file that gets created in the repository you are currently working in.\nThat way you can keep all your projects separated while still being in the terminal and not leaving your programming/development environment.\ntodo ls\rThis command shows all your completed and uncompleted tasks.\nI recommend keeping the completed tasks until you finish your work for the day and then afterwards delete the tasks using the rm command.\n- [ ] Task1 id: {id} - [ ] Task2 id: {id} - [x] Completed Task id:{id} - [ ] Another Task id:{id}\rThe ids get displayed for future use of commands that need an id.\ntodo check [id]\rThis command marks the task with the corresponding id as completed.\nLastly the rm command\ntodo rm [id]\rDeleted the command with the corresponding id and removes it from the list of tasks forever.\nPlease practice caution when using the rm command as the removed tasks can not be recovered.\n","date":"2025-08-09","id":6,"permalink":"/docs/guides/usage-guide/","summary":"This is a short summary of all the flags and options + how to use them.","tags":[],"title":"Usage Guide"},{"content":"Link to valuable, relevant resources.\n","date":"2024-02-27","id":7,"permalink":"/docs/resources/","summary":"\u003cp\u003eLink to valuable, relevant resources.\u003c/p\u003e","tags":[],"title":"Resources"},{"content":"","date":"2023-09-07","id":8,"permalink":"/docs/","summary":"ToDo CLI is a Command line interface tool for tracking tasks without leaving the programming environment.","tags":[],"title":"ToDo CLI"},{"content":"","date":"2023-09-07","id":9,"permalink":"/privacy/","summary":"","tags":[],"title":"Privacy Policy"},{"content":"","date":"2023-09-07","id":10,"permalink":"/","summary":"","tags":[],"title":"ToDo CLI Tool"},{"content":"","date":"0001-01-01","id":11,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":12,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":13,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"}]
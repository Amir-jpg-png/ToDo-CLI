name: Build and Release on Version Change

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Get VERSION from main.py
        id: get_version
        run: |
          # Extract VERSION from main.py (assumes a line like: VERSION = "1.2.3")
          VERSION_LINE=$(grep '^VERSION =' main.py)
          VERSION=$(echo $VERSION_LINE | cut -d '"' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get latest git tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Compare version with latest tag
        id: compare_version
        run: |
          if [ "${{ steps.get_version.outputs.version }}" != "${{ steps.get_latest_tag.outputs.latest_tag }}" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build executable with PyInstaller
        if: steps.compare_version.outputs.version_changed == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pyinstaller --onefile main.py

      - name: Create GitHub Release
        if: steps.compare_version.outputs.version_changed == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          files: dist/main
